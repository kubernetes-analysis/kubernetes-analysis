#!/usr/bin/env python3
import argparse
import sys
from typing import Any

from loguru import logger

from src.analyze import Analyze
from src.export import Export
from src.pipeline import Pipeline
from src.predict import Predict
from src.rollout import Rollout
from src.serve import Serve
from src.train import Train

COMMAND_EXPORT = "export"
COMMAND_ANALYZE = "analyze"
COMMAND_TRAIN = "train"
COMMAND_PREDICT = "predict"
COMMAND_PIPELINE = "pipeline"
COMMAND_SERVE = "serve"
COMMAND_ROLLOUT = "rollout"


def main():
    args = parse_args()

    if args.command == COMMAND_EXPORT:
        Export(args).run()

    if args.command == COMMAND_ANALYZE:
        Analyze(args).run()

    if args.command == COMMAND_TRAIN:
        Train(args).run()

    if args.command == COMMAND_PREDICT:
        Predict(args).run()

    if args.command == COMMAND_PIPELINE:
        Pipeline(args).run()

    if args.command == COMMAND_SERVE:
        Serve(args).run()

    if args.command == COMMAND_ROLLOUT:
        Rollout(args).run()


def parse_args() -> Any:
    parser = argparse.ArgumentParser()

    subparsers = parser.add_subparsers(dest="command")
    subparsers.required = True

    Export.add_parser(COMMAND_EXPORT, subparsers)
    Analyze.add_parser(COMMAND_ANALYZE, subparsers)
    Train.add_parser(COMMAND_TRAIN, subparsers)
    Predict.add_parser(COMMAND_PREDICT, subparsers)
    Pipeline.add_parser(COMMAND_PIPELINE, subparsers)
    Serve.add_parser(COMMAND_SERVE, subparsers)
    Rollout.add_parser(COMMAND_ROLLOUT, subparsers)

    return parser.parse_args()


if __name__ == "__main__":
    main()
